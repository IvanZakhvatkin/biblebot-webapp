// script.js
// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ FastAPI –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∏—Ö–æ–≤

const API_BASE = "https://biblebot-api.onrender.com";

const bookSelect = document.getElementById("book");
const chapterSelect = document.getElementById("chapter");
const versesContainer = document.getElementById("text");

// –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥
fetch(`${API_BASE}/books`)
  .then((res) => res.json())
  .then((books) => {
    books.forEach((book) => {
      const option = document.createElement("option");
      option.value = book;
      option.textContent = book;
      bookSelect.appendChild(option);
    });
    console.log("üìö –ó–∞–≥—Ä—É–∂–µ–Ω—ã –∫–Ω–∏–≥–∏:", books);
  })
  .catch((err) => {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–Ω–∏–≥:", err);
  });

// –ü—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–Ω–∏–≥–∏ ‚Äî –ø–æ–ª—É—á–∏—Ç—å –≥–ª–∞–≤—ã
bookSelect.addEventListener("change", () => {
  const book = bookSelect.value;
  chapterSelect.innerHTML = "<option disabled selected>–í—ã–±–µ—Ä–∏ –≥–ª–∞–≤—É</option>";
  chapterSelect.disabled = true;
  versesContainer.innerHTML = "";

  fetch(`${API_BASE}/chapters?book=${encodeURIComponent(book)}`)
    .then((res) => res.json())
    .then((chapters) => {
      chapters.forEach((ch) => {
        const option = document.createElement("option");
        option.value = ch;
        option.textContent = `–ì–ª–∞–≤–∞ ${ch}`;
        chapterSelect.appendChild(option);
      });
      chapterSelect.disabled = false;
      console.log(`üìñ –ì–ª–∞–≤—ã –∫–Ω–∏–≥–∏ ${book}:`, chapters);
    })
    .catch((err) => {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤:", err);
    });
});

// –ü—Ä–∏ –≤—ã–±–æ—Ä–µ –≥–ª–∞–≤—ã ‚Äî –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç
chapterSelect.addEventListener("change", () => {
  const book = bookSelect.value;
  const chapter = chapterSelect.value;
  versesContainer.innerHTML = "–ó–∞–≥—Ä—É–∑–∫–∞...";

  fetch(`${API_BASE}/bible?book=${encodeURIComponent(book)}&chapter=${chapter}`)
    .then((res) => res.json())
    .then((data) => {
      const versesHtml = data.verses.map((v) => `
        <p><strong>${v.verse}</strong> ${v.text}</p>
      `).join("");
      versesContainer.innerHTML = versesHtml;
      console.log(`‚úÖ –ü–æ–∫–∞–∑–∞–Ω–∞ –≥–ª–∞–≤–∞ ${chapter} –∫–Ω–∏–≥–∏ ${book}`);
    })
    .catch((err) => {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤—ã:", err);
    });
});

// --- –î–û–ë–ê–í–¨ –≠–¢–û –í –ö–û–ù–ï–¶ script.js ---

// –ü–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ URL
function getUrlParams() {
  const params = new URLSearchParams(window.location.search);
  return {
    book: params.get("book"),
    chapter: params.get("chapter"),
  };
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebApp –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
function initByUrl() {
  const { book, chapter } = getUrlParams();
  if (book) {
    // –í—ã–±—Ä–∞—Ç—å –∫–Ω–∏–≥—É
    bookSelect.value = book;
    // –ü–æ–¥–≥—Ä—É–∑–∏—Ç—å –≥–ª–∞–≤—ã
    fetch(`${API_BASE}/chapters?book=${encodeURIComponent(book)}`)
      .then((res) => res.json())
      .then((chapters) => {
        chapterSelect.innerHTML = "<option disabled selected>–í—ã–±–µ—Ä–∏ –≥–ª–∞–≤—É</option>";
        chapters.forEach((ch) => {
          const option = document.createElement("option");
          option.value = ch;
          option.textContent = ch;
          chapterSelect.appendChild(option);
        });
        chapterSelect.disabled = false;
        if (chapter) {
          // –í—ã–±—Ä–∞—Ç—å –≥–ª–∞–≤—É
          chapterSelect.value = chapter.startsWith("–ì–ª–∞–≤–∞ ") ? chapter : "–ì–ª–∞–≤–∞ " + chapter;
          // –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ–∫—Å—Ç –≥–ª–∞–≤—ã
          fetch(`${API_BASE}/bible?book=${encodeURIComponent(book)}&chapter=${chapter}`)
            .then((res) => res.json())
            .then((data) => {
              const versesHtml = data.verses.map((v) => `
                <p><strong>${v.verse}</strong> ${v.text}</p>
              `).join("");
              versesContainer.innerHTML = versesHtml;
              console.log(`‚úÖ –ü–æ–∫–∞–∑–∞–Ω–∞ –≥–ª–∞–≤–∞ ${chapter} –∫–Ω–∏–≥–∏ ${book}`);
            });
        }
      });
  }
}

// –î–æ–∂–¥–∞—Ç—å—Å—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–Ω–∏–≥, –∑–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å initByUrl
fetch(`${API_BASE}/books`)
  .then((res) => res.json())
  .then((books) => {
    books.forEach((book) => {
      const option = document.createElement("option");
      option.value = book;
      option.textContent = book;
      bookSelect.appendChild(option);
    });
    console.log("üìö –ó–∞–≥—Ä—É–∂–µ–Ω—ã –∫–Ω–∏–≥–∏:", books);
    // ‚Üê –í–ê–ñ–ù–û: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
    initByUrl();
  })
  .catch((err) => {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–Ω–∏–≥:", err);
  });
